#cloud-config
packages:
  - nfs-kernel-server

runcmd:
  # Mount SFTP to /DATA directory
  - ls -l /home/${admin_user}/.ssh/
  - mkdir -p ${sftp_dir}
  - echo "${sftp_ip}:${sftp_dir}      ${sftp_dir}      nfs4 rw,noatime,nolock,hard,tcp 0 0" >> /etc/fstab
  - mount -a
  # THIS CONVENTION (/shared) IS MOST LIKELY REDUNDANT AS OF SEPTEMBER 2024
  # Switched to ssh transfer of join command
  # NFS export /shared directory and make it accessible to all subnet
  - echo "/shared `hostname -I | awk '{print $1}' | grep -Po '(\d+\.){3}'`0/24(rw,sync,no_root_squash,no_all_squash)" > /etc/exports
  - mkdir -p /shared
  - chown ${admin_user} /shared
  - systemctl enable nfs-kernel-server
  - systemctl restart nfs-kernel-server
  # Kubeadm  
  - echo "SUDO_UID=${admin_user} sudo -E /tmp/kubeadm-bootstrap/init-master.bash" >> /tmp/install.sh
  # Initialize kubeadm 
  - su ${admin_user} -c "/tmp/install.sh"
  # Share the join command with all the nodes 
  - echo "${ssh_private_key}" | base64 -d > /home/${admin_user}/.ssh/${ssh_private_key_name}
  - chmod 600 /home/${admin_user}/.ssh/${ssh_private_key_name}
  - chown ${admin_user}:${admin_user} /home/${admin_user}/.ssh/${ssh_private_key_name}
  - kubeadm token create --print-join-command > /shared/kubeadm-join.bash
  - chmod +x /shared/kubeadm-join.bash
  # Share the join command with all the nodes using scp -- SEPTEMBER 2024
  - |
    for i in $(seq 1 ${nb_nodes}); do
      node_name=${project_name}-node$i
      echo "Attempting to copy kubeadm-join.bash to $node_name" >> /tmp/scp_log.txt
      retry_count=0
      max_retries=5
      while [ $retry_count -lt $max_retries ]; do
        scp -o StrictHostKeyChecking=no -i /home/${admin_user}/.ssh/${ssh_private_key_name} /shared/kubeadm-join.bash ${admin_user}@$node_name:/tmp/
        if [ $? -eq 0 ]; then
          echo "Successfully copied kubeadm-join.bash to $node_name on attempt $((retry_count + 1))" >> /tmp/scp_log.txt
          break
        else
          retry_count=$((retry_count + 1))
          if [ $retry_count -lt $max_retries ]; then
            echo "Failed to copy to $node_name. Retrying in 10 seconds... (Attempt $retry_count of $max_retries)" >> /tmp/scp_log.txt
            sleep 10
          else
            echo "Failed to copy kubeadm-join.bash to $node_name after $max_retries attempts" >> /tmp/scp_log.txt
          fi
        fi
      done
    done
  - kubectl label nodes `hostname` type=production
  # k8s commands
  - cat /tmp/kubeadm-bootstrap/.bashrc >> /home/${admin_user}/.bashrc
  # ssh config for nodes
  # make sure that k8s node is ready, and enable easy ssh
  - echo "Adding nodes"
  - su ${admin_user} -c "touch /home/${admin_user}/.ssh/config"
  - mv /tmp/kubeadm-bootstrap/add_nodes.bash /home/${admin_user}/
  - chmod u+x /home/${admin_user}/add_nodes.bash
  - su ${admin_user} -c "/home/${admin_user}/add_nodes.bash ${nb_nodes}"
  # Configure docker registry
  - echo "" >> /home/${admin_user}/.ssh/config;
  - echo "Host registry" >> /home/${admin_user}/.ssh/config;
  - echo "        HostName "${docker_registry} >> /home/${admin_user}/.ssh/config;
  - echo "        User "${admin_user} >> /home/${admin_user}/.ssh/config; 
  #- su ${admin_user} -c "sudo docker login ${docker_registry} --username ${docker_id} --password ${docker_password}"
  - sudo groupadd docker
  - sudo usermod -aG docker ${admin_user}
  - su ${admin_user} -c "docker login ${docker_registry} --username ${docker_id} --password ${docker_password}"
  - while [ ! -d /var/lib/kubelet/ ]; do sleep 1; done; 
  - cp /home/${admin_user}/.docker/config.json /var/lib/kubelet/
  # creating flag to say that master configuration finished
  - touch /shared/k8s-initialized
